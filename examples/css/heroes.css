body {
    margin: 0px;
}

p {
    font-size: 32px;
    margin: 24px;
    height: 1000px;
}

/* 
    this hero has a pretty standard background image size that covers the container,
    with an explicit height set that will be the same no matter what.
    then we use absolute positioning to move the inner content around the hero.
    this is rather fragile, because it will probably move off the screen
    if the screen width gets too narrow, but it can work for some scenarios.
*/
#hero_1 {
    background-image: url("../images/SnowyHero.jpg");
    background-size: cover;
    background-repeat: no-repeat;
    background-position: right center;
    height: 500px;
    position: relative;
}

#hero_1 h1 {
    position: absolute;
    left: 100px;
    top: 50px;
    font-family: cursive;
    font-size: 60px;
}

/* 
    this hero has a another pretty standard background image size that covers the container,
    but it's a gif this time, and rather than set an explicit height we use a relative height,
    setting it to 80vh, which means 80% of the view height.
    then rather than using absolute positioning like last time, we use flexbox container properties.
    to center the content in middle; this is much less fragile and most likely won't overflow,
    because flexboxes by nature are rather flexible (no pun intended).
*/
#hero_2 {
    background-image: url("../images/forest.gif");
    background-size: cover;
    background-position: center center;
    height: 80vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: white;
    text-shadow: 2px 2px 3px red;
    text-align: center;
}

#hero_2 h2 {
    font-family: cursive;
    font-size: 60px;
}

#hero_2 h3 {
    font-family: cursive;
    font-size: 48px;
}

/*
    finally, we have a hero with a parallax background image effect, which uses the
    background-attachment: fixed; property/value pair to have the page content
    scroll over the background while it remains fixed.
    We also don't set ANY height this time; the height of the hero is dependent on
    the height of the content inside it (including padding but not necesssarily margin) 
*/
#hero_3 {
    background-image: url("../images/clouds.gif");
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    text-align: center;
}

#hero_3 h2 {
    font-family: cursive;
    font-size: 60px;
    padding-top: 60px;
}

#hero_3 h3 {
    font-family: cursive;
    font-size: 48px;
    padding-bottom: 60px;
}